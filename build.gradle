plugins {
	id 'maven-publish'
	id 'org.quiltmc.loom' version '0.12.+'
	id 'io.github.juuxel.loom-quiltflower' version '1.7.+'
	id 'org.quiltmc.quilt-mappings-on-loom' version '4.2.1'
}

loom {
	accessWidenerPath = file("src/main/resources/eyesofender.accesswidener")
	runs {
		datagen {
			server()

			name = "Data Generation"
			runDir = "build/datagen"

			vmArg("-Dfabric-api.datagen")
			vmArg("-Dfabric-api.datagen.output-dir=${file("src/main/generated")}")
		}
	}
}

assemble.dependsOn(runDatagen)

sourceSets {
	main {
		resources {
			srcDirs += [
					"src/main/generated"
			]
		}
	}
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	maven {
		name 'Quilt'
		url 'https://maven.quiltmc.org/repository/release'
	}
	maven {
		name = "CurseForge"
		url = "https://www.cursemaven.com"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name "Cardinal components, Impersonat"
		url "https://ladysnake.jfrog.io/artifactory/mods"
	}
	maven {
		name "rei"
		url "https://maven.shedaniel.me"
	}
	maven {
		name "patchouli"
		url "https://maven.blamejared.com"
	}
	maven {
		name "modrinth"
		url "https://api.modrinth.com/maven"
	}
	maven {
		name "jitpack"
		url "https://jitpack.io"
	}
	maven {
		name = "GeckoLib"
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	maven {
		name = "Permissions"
		url = "https://maven.nucleoid.xyz"
		content {
			includeGroup 'eu.pb4'
		}
	}
	maven { url "https://maven.willbl.dev/releases" }
	maven {
		name = "Jamies"
		url "https://maven.jamieswhiteshirt.com/libs-release/"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(loom.layered {
		addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:v2"))
	})
	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
	modImplementation "org.quiltmc:qsl:${qsl_version}+${minecraft_version}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${quilted_fabric_api_version}-${minecraft_version}"


	//CCA
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinal_components_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${cardinal_components_version}"
	modImplementation "maven.modrinth:midnightlib:${midnightlib_version}"
	include "maven.modrinth:midnightlib:${midnightlib_version}"

	modImplementation "com.williambl.early_features:early_features:1.1.0"


	modImplementation("io.github.ladysnake:impersonate:${impersonate_version}") {
		transitive = false
	}
	include "io.github.ladysnake:impersonate:${impersonate_version}"

	modImplementation "vazkii.patchouli:Patchouli:${patchouli_version}"
	modImplementation("com.github.virtuoel:pehkui:${pehkui_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"


	modImplementation "software.bernie.geckolib:geckolib-quilt-1.19:${project.geckolib_version}"

	// Satin
	modImplementation include("io.github.ladysnake:satin:${project.satin_version}") {
		exclude group: "net.fabricmc.fabric-api"
	}

	// Reach Entity Attributes
	modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}") {
		exclude group: "net.fabricmc.fabric-api"
	}

	// Fabric Permissions API
	modImplementation include("me.lucko:fabric-permissions-api:${project.fpa_version}") {
		exclude group: "net.fabricmc.fabric-api"
	}
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
